type DeathDetails = record {
<<<<<<< HEAD
  sex : text;
  deathDate : text;
  birthDate : text;
  birthLocationCode : text;
  legalName : text;
=======
  deathDate : text;
  birthDate : text;
  birthLocationCode : float64;
  deathLocationCode : float64;
>>>>>>> dc2cf0b (reinitialze  in local)
  lastName : text;
  firstName : text;
};
type HttpHeader = record { value : text; name : text };
type HttpResponse = record {
  status : nat;
  body : vec nat8;
  headers : vec HttpHeader;
};
type HttpTransformArgs = record { context : vec nat8; response : HttpResponse };
type ManualReply = variant { err : text; res : bool };
service : () -> {
  check_user_dead_details : (DeathDetails) -> (ManualReply);
  get_matchid_url : () -> (text);
  xkcdTransform : (HttpTransformArgs) -> (HttpResponse) query;
}